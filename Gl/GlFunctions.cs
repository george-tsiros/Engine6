namespace Gl;

using GLint64 = System.Int64;
using GLuint64 = System.UInt64;
using GLsync = System.IntPtr;
using GLenum = System.UInt32;
using GLsizei = System.Int32;
using GLint = System.Int32;
using GLbitfield = System.UInt32;
using GLuint = System.UInt32;
using GLboolean = System.Byte;
using GLchar = System.Byte;
using GLfloat = System.Single;
using GLsizeiptr = System.IntPtr;
using GLintptr = System.IntPtr;
using GLubyte = System.Byte;
using GLbyte = System.SByte;
using GLshort = System.Int16;
using GLushort = System.UInt16;
using GLdouble = System.Double;


public unsafe class GlFunctions {
    private static GlFunctions instance;
    public GlFunctions () { 
    
    }
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glActiveShaderProgram;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glBindProgramPipeline;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLfloat, void> glClearDepthf;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, char**, GLuint> glCreateShaderProgramv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glDeleteProgramPipelines;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> glDepthRangef;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void> glDepthRangeArrayv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void> glDepthRangeIndexed;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glGenProgramPipelines;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void> glGetDoublei_v;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> glGetFloati_v;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLenum*, void*, void> glGetProgramBinary;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetProgramPipelineiv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> glGetProgramPipelineInfoLog;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, GLint*, void> glGetShaderPrecisionFormat;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void> glGetVertexAttribLdv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glIsProgramPipeline;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, GLsizei, void> glProgramBinary;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> glProgramParameteri;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, void> glProgramUniform1f;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> glProgramUniform1fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, void> glProgramUniform1i;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> glProgramUniform1iv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, void> glProgramUniform1ui;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> glProgramUniform1uiv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, void> glProgramUniform2f;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> glProgramUniform2fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, void> glProgramUniform2i;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> glProgramUniform2iv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, void> glProgramUniform2ui;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> glProgramUniform2uiv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, GLfloat, void> glProgramUniform3f;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> glProgramUniform3fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, void> glProgramUniform3i;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> glProgramUniform3iv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, GLuint, void> glProgramUniform3ui;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> glProgramUniform3uiv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat, void> glProgramUniform4f;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> glProgramUniform4fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, void> glProgramUniform4i;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> glProgramUniform4iv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, GLuint, GLuint, void> glProgramUniform4ui;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> glProgramUniform4uiv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> glProgramUniformMatrix2fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> glProgramUniformMatrix2x3fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> glProgramUniformMatrix2x4fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> glProgramUniformMatrix3fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> glProgramUniformMatrix3x2fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> glProgramUniformMatrix3x4fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> glProgramUniformMatrix4fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> glProgramUniformMatrix4x2fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> glProgramUniformMatrix4x3fv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<void> glReleaseShaderCompiler;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLint*, void> glScissorArrayv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLsizei, void> glScissorIndexed;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> glScissorIndexedv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLenum, void*, GLsizei, void> glShaderBinary;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLbitfield, GLuint, void> glUseProgramStages;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glValidateProgramPipeline;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, void> glVertexAttribL1d;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> glVertexAttribL1dv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void> glVertexAttribL2d;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> glVertexAttribL2dv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void> glVertexAttribL3d;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> glVertexAttribL3dv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void> glVertexAttribL4d;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> glVertexAttribL4dv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void> glVertexAttribLPointer;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void> glViewportArrayv;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> glViewportIndexedf;
    [GlVersion(4, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> glViewportIndexedfv;

    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glActiveTexture;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glAttachShader;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> glBeginQuery;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glEndQuery;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLchar*, void> glBindAttribLocation;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> glBindBuffer;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> glBindTexture;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> glBlendColor;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glBlendEquation;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> glBlendEquationSeparate;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> glBlendFunc;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void> glBlendFuncSeparate;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizeiptr, void*, GLenum, void> glBufferData;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void*, void> glBufferSubData;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLbitfield, void> glClear;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> glClearColor;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLdouble, void> glClearDepth;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, void> glClearStencil;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLboolean, GLboolean, GLboolean, GLboolean, void> glColorMask;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glCompileShader;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, void*, void> glCompressedTexImage1D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, void*, void> glCompressedTexImage2D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void*, void> glCompressedTexImage3D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void> glCompressedTexSubImage1D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void> glCompressedTexSubImage2D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void> glCompressedTexSubImage3D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint, void> glCopyTexImage1D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, void> glCopyTexImage2D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, void> glCopyTexSubImage1D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> glCopyTexSubImage2D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> glCopyTexSubImage3D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint> glCreateProgram;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint> glCreateShader;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glCullFace;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glDeleteBuffers;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glDeleteProgram;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glDeleteQueries;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glDeleteShader;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glDeleteTextures;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glDepthFunc;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLboolean, void> glDepthMask;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void> glDepthRange;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glDetachShader;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void> glDrawArrays;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glDrawBuffer;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum*, void> glDrawBuffers;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, void> glDrawElements;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, void> glDrawRangeElements;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glDisable;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glEnable;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glDisableVertexAttribArray;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glEnableVertexAttribArray;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<void> glFinish;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<void> glFlush;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glFrontFace;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glGenBuffers;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glGenQueries;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glGenTextures;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean*, void> glGetBooleanv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> glGetDoublev;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> glGetFloatv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> glGetIntegerv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*, void> glGetActiveAttrib;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*, void> glGetActiveUniform;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLuint*, void> glGetAttachedShaders;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint> glGetAttribLocation;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> glGetBufferParameteriv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void**, void> glGetBufferPointerv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void*, void> glGetBufferSubData;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void*, void> glGetCompressedTexImage;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum> glGetError;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetProgramiv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> glGetProgramInfoLog;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> glGetQueryiv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetQueryObjectiv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> glGetQueryObjectuiv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetShaderiv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> glGetShaderInfoLog;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> glGetShaderSource;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLubyte*> glGetString;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLenum, void*, void> glGetTexImage;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLfloat*, void> glGetTexLevelParameterfv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint*, void> glGetTexLevelParameteriv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> glGetTexParameterfv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> glGetTexParameteriv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat*, void> glGetUniformfv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint*, void> glGetUniformiv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint> glGetUniformLocation;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void> glGetVertexAttribdv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> glGetVertexAttribfv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetVertexAttribiv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void**, void> glGetVertexAttribPointerv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> glHint;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glIsBuffer;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean> glIsEnabled;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glIsProgram;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glIsQuery;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glIsShader;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glIsTexture;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLfloat, void> glLineWidth;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glLinkProgram;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glLogicOp;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*> glMapBuffer;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, GLsizei*, GLsizei, void> glMultiDrawArrays;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei*, GLenum, void**, GLsizei, void> glMultiDrawElements;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> glPixelStoref;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> glPixelStorei;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> glPointParameterf;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> glPointParameterfv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> glPointParameteri;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> glPointParameteriv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLfloat, void> glPointSize;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> glPolygonMode;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> glPolygonOffset;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glReadBuffer;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void> glReadPixels;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLfloat, GLboolean, void> glSampleCoverage;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, void> glScissor;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar**, GLint*, void> glShaderSource;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint, void> glStencilFunc;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLuint, void> glStencilFuncSeparate;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glStencilMask;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> glStencilMaskSeparate;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void> glStencilOp;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void> glStencilOpSeparate;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, void*, void> glTexImage1D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void> glTexImage2D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void> glTexImage3D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> glTexParameterf;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> glTexParameterfv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> glTexParameteri;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> glTexParameteriv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLenum, GLenum, void*, void> glTexSubImage1D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void> glTexSubImage2D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> glTexSubImage3D;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, void> glUniform1f;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> glUniform1fv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLint, void> glUniform1i;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> glUniform1iv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, void> glUniform2f;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> glUniform2fv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> glUniform2i;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> glUniform2iv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLfloat, void> glUniform3f;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> glUniform3fv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void> glUniform3i;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> glUniform3iv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLfloat, GLfloat, void> glUniform4f;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> glUniform4fv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, void> glUniform4i;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> glUniform4iv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> glUniformMatrix2fv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> glUniformMatrix3fv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> glUniformMatrix4fv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean> glUnmapBuffer;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glUseProgram;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glValidateProgram;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, void> glVertexAttrib1d;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> glVertexAttrib1dv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, void> glVertexAttrib1f;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> glVertexAttrib1fv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, void> glVertexAttrib1s;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> glVertexAttrib1sv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void> glVertexAttrib2d;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> glVertexAttrib2dv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void> glVertexAttrib2f;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> glVertexAttrib2fv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, void> glVertexAttrib2s;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> glVertexAttrib2sv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void> glVertexAttrib3d;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> glVertexAttrib3dv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, void> glVertexAttrib3f;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> glVertexAttrib3fv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, void> glVertexAttrib3s;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> glVertexAttrib3sv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void> glVertexAttrib4Nbv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> glVertexAttrib4Niv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> glVertexAttrib4Nsv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte, GLubyte, GLubyte, GLubyte, void> glVertexAttrib4Nub;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> glVertexAttrib4Nubv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> glVertexAttrib4Nuiv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLushort*, void> glVertexAttrib4Nusv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void> glVertexAttrib4bv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void> glVertexAttrib4d;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> glVertexAttrib4dv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> glVertexAttrib4f;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> glVertexAttrib4fv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> glVertexAttrib4iv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, GLshort, void> glVertexAttrib4s;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> glVertexAttrib4sv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> glVertexAttrib4ubv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> glVertexAttrib4uiv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLushort*, void> glVertexAttrib4usv;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLsizei, void*, void> glVertexAttribPointer;
    [GlVersion(2, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, void> glViewport;

    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> glBeginConditionalRender;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<void> glEndConditionalRender;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glBeginTransformFeedback;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<void> glEndTransformFeedback;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void> glBindBufferBase;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLintptr, GLsizeiptr, void> glBindBufferRange;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, char*, void> glBindFragDataLocation;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> glBindFramebuffer;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> glBindRenderbuffer;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glBindVertexArray;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void> glBlitFramebuffer;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum> glCheckFramebufferStatus;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> glClampColor;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLfloat, GLint, void> glClearBufferfi;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLfloat*, void> glClearBufferfv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint*, void> glClearBufferiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint*, void> glClearBufferuiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean, GLboolean, GLboolean, GLboolean, void> glColorMaski;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glDeleteFramebuffers;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glDeleteRenderbuffers;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glDeleteVertexArrays;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> glDisablei;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> glEnablei;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void> glFlushMappedBufferRange;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, void> glFramebufferRenderbuffer;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void> glFramebufferTexture1D;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void> glFramebufferTexture2D;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLint, void> glFramebufferTexture3D;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLint, void> glFramebufferTextureLayer;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glGenerateMipmap;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glGenFramebuffers;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glGenRenderbuffers;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glGenVertexArrays;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean*, void> glGetBooleani_v;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void> glGetIntegeri_v;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, char*, GLint> glGetFragDataLocation;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> glGetFramebufferAttachmentParameteriv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> glGetRenderbufferParameteriv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLubyte*> glGetStringi;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> glGetTexParameterIiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> glGetTexParameterIuiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, char*, void> glGetTransformFeedbackVarying;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint*, void> glGetUniformuiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetVertexAttribIiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> glGetVertexAttribIuiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean> glIsEnabledi;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glIsFramebuffer;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glIsRenderbuffer;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glIsVertexArray;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, GLbitfield, void*> glMapBufferRange;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, void> glRenderbufferStorage;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void> glRenderbufferStorageMultisample;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> glTexParameterIiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> glTexParameterIuiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, char**, GLenum, void> glTransformFeedbackVaryings;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLuint, void> glUniform1ui;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> glUniform1uiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, void> glUniform2ui;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> glUniform2uiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, GLuint, void> glUniform3ui;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> glUniform3uiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, GLuint, GLuint, void> glUniform4ui;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> glUniform4uiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, void> glVertexAttribI1i;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> glVertexAttribI1iv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glVertexAttribI1ui;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> glVertexAttribI1uiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, void> glVertexAttribI2i;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> glVertexAttribI2iv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> glVertexAttribI2ui;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> glVertexAttribI2uiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, void> glVertexAttribI3i;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> glVertexAttribI3iv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, void> glVertexAttribI3ui;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> glVertexAttribI3uiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void> glVertexAttribI4bv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, void> glVertexAttribI4i;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> glVertexAttribI4iv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> glVertexAttribI4sv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> glVertexAttribI4ubv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, GLuint, void> glVertexAttribI4ui;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> glVertexAttribI4uiv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLushort*, void> glVertexAttribI4usv;
    [GlVersion(3, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void> glVertexAttribIPointer;

    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void> glBeginQueryIndexed;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> glEndQueryIndexed;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> glBindTransformFeedback;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> glBlendEquationi;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> glBlendEquationSeparatei;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> glBlendFunci;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void> glBlendFuncSeparatei;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glDeleteTransformFeedbacks;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, void*, void> glDrawArraysIndirect;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void> glDrawElementsIndirect;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> glDrawTransformFeedback;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void> glDrawTransformFeedbackStream;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glGenTransformFeedbacks;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void> glGetActiveSubroutineName;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, GLint*, void> glGetActiveSubroutineUniformiv;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void> glGetActiveSubroutineUniformName;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> glGetProgramStageiv;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLint*, void> glGetQueryIndexediv;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLuint> glGetSubroutineIndex;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLint> glGetSubroutineUniformLocation;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble*, void> glGetUniformdv;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint*, void> glGetUniformSubroutineuiv;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glIsTransformFeedback;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLfloat, void> glMinSampleShading;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> glPatchParameterfv;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> glPatchParameteri;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<void> glPauseTransformFeedback;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<void> glResumeTransformFeedback;
    [GlVersion(4, 0)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void> glUniformSubroutinesuiv;

    [GlVersion(4, 4)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLuint*, void> glBindBuffersBase;
    [GlVersion(4, 4)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLuint*, GLintptr*, GLintptr*, void> glBindBuffersRange;
    [GlVersion(4, 4)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, void> glBindImageTextures;
    [GlVersion(4, 4)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, void> glBindSamplers;
    [GlVersion(4, 4)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, void> glBindTextures;
    [GlVersion(4, 4)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLintptr*, GLsizei*, void> glBindVertexBuffers;
    [GlVersion(4, 4)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizeiptr, void*, GLbitfield, void> glBufferStorage;
    [GlVersion(4, 4)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLenum, void*, void> glClearTexImage;
    [GlVersion(4, 4)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> glClearTexSubImage;

    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, char*, void> glBindFragDataLocationIndexed;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLsync, GLbitfield, GLuint64, GLenum> glClientWaitSync;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLsync, void> glDeleteSync;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLint, void> glDrawElementsBaseVertex;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, void> glDrawElementsInstancedBaseVertex;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, GLint, void> glDrawRangeElementsBaseVertex;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLbitfield, GLsync> glFenceSync;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, void> glFramebufferTexture;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint64*, void> glGetInteger64i_v;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint64*, void> glGetInteger64v;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint64*, void> glGetBufferParameteri64v;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, char*, GLint> glGetFragDataIndex;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> glGetMultisamplefv;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64*, void> glGetQueryObjecti64v;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64*, void> glGetQueryObjectui64v;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetSamplerParameterIiv;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> glGetSamplerParameterIuiv;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> glGetSamplerParameterfv;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetSamplerParameteriv;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLsync, GLenum, GLsizei, GLsizei*, GLint*, void> glGetSynciv;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLsync, GLboolean> glIsSync;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei*, GLenum, void**, GLsizei, GLint*, void> glMultiDrawElementsBaseVertex;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, void> glProvokingVertex;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> glQueryCounter;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLbitfield, void> glSampleMaski;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glSamplerParameterIiv;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> glSamplerParameterIuiv;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat, void> glSamplerParameterf;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> glSamplerParameterfv;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> glSamplerParameteri;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glSamplerParameteriv;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, void> glTexImage2DMultisample;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void> glTexImage3DMultisample;
    [GlVersion(3, 2)] public readonly delegate* unmanaged[Stdcall]<GLsync, GLbitfield, GLuint64, void> glWaitSync;

    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum, void> glBindImageTexture;
    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, GLuint, void> glDrawArraysInstancedBaseInstance;
    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLuint, void> glDrawElementsInstancedBaseInstance;
    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, GLuint, void> glDrawElementsInstancedBaseVertexBaseInstance;
    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, void> glDrawTransformFeedbackInstanced;
    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, void> glDrawTransformFeedbackStreamInstanced;
    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void> glGetActiveAtomicCounterBufferiv;
    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLint*, void> glGetInternalformativ;
    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLbitfield, void> glMemoryBarrier;
    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, void> glTexStorage1D;
    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void> glTexStorage2D;
    [GlVersion(4, 2)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, void> glTexStorage3D;

    [GlVersion(3, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glBindSampler;
    [GlVersion(3, 3)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glDeleteSamplers;
    [GlVersion(3, 3)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glGenSamplers;
    [GlVersion(3, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glIsSampler;
    [GlVersion(3, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void> glVertexAttribP1ui;
    [GlVersion(3, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void> glVertexAttribP2ui;
    [GlVersion(3, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void> glVertexAttribP3ui;
    [GlVersion(3, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void> glVertexAttribP4ui;
    [GlVersion(3, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glVertexAttribDivisor;

    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glBindTextureUnit;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLintptr, GLsizei, void> glVertexArrayVertexBuffer;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLuint*, GLintptr*, GLsizei*, void> glVertexArrayVertexBuffers;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void> glBlitNamedFramebuffer;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, void*, GLenum, void> glNamedBufferData;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, void*, GLbitfield, void> glNamedBufferStorage;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void*, void> glNamedBufferSubData;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum> glCheckNamedFramebufferStatus;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLfloat, GLint, void> glClearNamedFramebufferfi;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLfloat*, void> glClearNamedFramebufferfv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint*, void> glClearNamedFramebufferiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLuint*, void> glClearNamedFramebufferuiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, void*, void> glClearNamedBufferData;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, void*, void> glClearNamedBufferSubData;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> glClipControl;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void> glCompressedTextureSubImage1D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void> glCompressedTextureSubImage2D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void> glCompressedTextureSubImage3D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, void> glCopyNamedBufferSubData;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, void> glCopyTextureSubImage1D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> glCopyTextureSubImage2D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> glCopyTextureSubImage3D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glCreateBuffers;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glCreateFramebuffers;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glCreateProgramPipelines;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void> glCreateQueries;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glCreateRenderbuffers;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glCreateSamplers;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void> glCreateTextures;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glCreateTransformFeedbacks;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> glCreateVertexArrays;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> glNamedFramebufferDrawBuffer;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, void> glNamedFramebufferDrawBuffers;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glDisableVertexArrayAttrib;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glEnableVertexArrayAttrib;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void> glFlushMappedNamedBufferRange;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> glNamedFramebufferParameteri;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, void> glNamedFramebufferRenderbuffer;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, void> glNamedFramebufferTexture;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, GLint, void> glNamedFramebufferTextureLayer;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glGenerateTextureMipmap;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64*, void> glGetNamedBufferParameteri64v;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetNamedBufferParameteriv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void**, void> glGetNamedBufferPointerv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void*, void> glGetNamedBufferSubData;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, void*, void> glGetCompressedTextureImage;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void*, void> glGetnCompressedTexImage;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, void*, void> glGetCompressedTextureSubImage;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> glGetNamedFramebufferAttachmentParameteriv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetNamedFramebufferParameteriv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLenum> glGetGraphicsResetStatus;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void> glGetQueryBufferObjecti64v;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void> glGetQueryBufferObjectiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void> glGetQueryBufferObjectui64v;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void> glGetQueryBufferObjectuiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetNamedRenderbufferParameteriv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLenum, GLsizei, void*, void> glGetTextureImage;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLenum, GLsizei, void*, void> glGetnTexImage;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLfloat*, void> glGetTextureLevelParameterfv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLint*, void> glGetTextureLevelParameteriv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetTextureParameterIiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> glGetTextureParameterIuiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> glGetTextureParameterfv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetTextureParameteriv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void> glGetTextureSubImage;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetTransformFeedbackiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint*, void> glGetTransformFeedbacki_v;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void> glGetnUniformdv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> glGetnUniformfv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> glGetnUniformiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> glGetnUniformuiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint64*, void> glGetVertexArrayIndexed64iv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void> glGetVertexArrayIndexediv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glGetVertexArrayiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, void> glInvalidateNamedFramebufferData;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLint, GLint, GLsizei, GLsizei, void> glInvalidateNamedFramebufferSubData;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*> glMapNamedBuffer;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLbitfield, void*> glMapNamedBufferRange;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLbitfield, void> glMemoryBarrierByRegion;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> glNamedFramebufferReadBuffer;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void> glReadnPixels;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLsizei, void> glNamedRenderbufferStorage;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, void> glNamedRenderbufferStorageMultisample;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, void> glTextureBuffer;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLintptr, GLsizei, void> glTextureBufferRange;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glTextureParameterIiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> glTextureParameterIuiv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat, void> glTextureParameterf;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> glTextureParameterfv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> glTextureParameteri;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> glTextureParameteriv;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, void> glTextureStorage1D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, void> glTextureStorage2D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, void> glTextureStorage2DMultisample;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, void> glTextureStorage3D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void> glTextureStorage3DMultisample;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLenum, GLenum, void*, void> glTextureSubImage1D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void> glTextureSubImage2D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> glTextureSubImage3D;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<void> glTextureBarrier;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> glTransformFeedbackBufferBase;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLintptr, GLsizei, void> glTransformFeedbackBufferRange;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> glUnmapNamedBuffer;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glVertexArrayElementBuffer;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> glVertexArrayAttribBinding;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLboolean, GLuint, void> glVertexArrayAttribFormat;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLuint, void> glVertexArrayAttribIFormat;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLuint, void> glVertexArrayAttribLFormat;
    [GlVersion(4, 5)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> glVertexArrayBindingDivisor;

    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLintptr, GLsizei, void> glBindVertexBuffer;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void*, void> glClearBufferData;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, void*, void> glClearBufferSubData;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void> glCopyImageSubData;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<DebugProc, void*, void> glDebugMessageCallback;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLuint*, GLboolean, void> glDebugMessageControl;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLenum, GLsizei, char*, void> glDebugMessageInsert;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> glDispatchCompute;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLintptr, void> glDispatchComputeIndirect;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> glFramebufferParameteri;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*, GLuint> glGetDebugMessageLog;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> glGetFramebufferParameteriv;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLint64*, void> glGetInternalformati64v;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLsizei*, char*, void> glGetObjectLabel;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<void*, GLsizei, GLsizei*, char*, void> glGetObjectPtrLabel;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, void**, void> glGetPointerv;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> glGetProgramInterfaceiv;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLenum*, GLsizei, GLsizei*, GLint*, void> glGetProgramResourceiv;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, char*, GLuint> glGetProgramResourceIndex;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, char*, GLint> glGetProgramResourceLocation;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, char*, GLint> glGetProgramResourceLocationIndex;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLsizei*, char*, void> glGetProgramResourceName;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glInvalidateBufferData;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void> glInvalidateBufferSubData;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum*, void> glInvalidateFramebuffer;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum*, GLint, GLint, GLint, GLint, void> glInvalidateSubFramebuffer;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, void> glInvalidateTexImage;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void> glInvalidateTexSubImage;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, void*, GLsizei, GLsizei, void> glMultiDrawArraysIndirect;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLsizei, GLsizei, void> glMultiDrawElementsIndirect;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, char*, void> glObjectLabel;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<void*, GLsizei, char*, void> glObjectPtrLabel;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<void> glPopDebugGroup;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, char*, void> glPushDebugGroup;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> glShaderStorageBlockBinding;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLintptr, GLsizeiptr, void> glTexBufferRange;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, void> glTexStorage2DMultisample;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void> glTexStorage3DMultisample;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, void> glTextureView;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glVertexAttribBinding;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLuint, void> glVertexAttribFormat;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLuint, void> glVertexAttribIFormat;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLuint, void> glVertexAttribLFormat;
    [GlVersion(4, 3)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> glVertexBindingDivisor;
    
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr, void> glCopyBufferSubData;
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void> glDrawArraysInstanced;
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, void> glDrawElementsInstanced;
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void> glGetActiveUniformBlockiv;
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLchar*, void> glGetActiveUniformBlockName;
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLchar*, void> glGetActiveUniformName;
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLenum, GLint*, void> glGetActiveUniformsiv;
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLuint> glGetUniformBlockIndex;
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar**, GLuint*, void> glGetUniformIndices;
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, void> glPrimitiveRestartIndex;
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void> glTexBuffer;
    [GlVersion(3, 1)] public readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> glUniformBlockBinding;
    
    [GlVersion(2, 1)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> glUniformMatrix2x3fv;
    [GlVersion(2, 1)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> glUniformMatrix2x4fv;
    [GlVersion(2, 1)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> glUniformMatrix3x2fv;
    [GlVersion(2, 1)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> glUniformMatrix3x4fv;
    [GlVersion(2, 1)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> glUniformMatrix4x2fv;
    [GlVersion(2, 1)] public readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> glUniformMatrix4x3fv;
}
