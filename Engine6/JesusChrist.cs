namespace Engine6;

using System;

using GLenum = System.UInt32;
using GLsizei = System.Int32;
using GLint = System.Int32;
using GLbitfield = System.UInt32;
using GLuint = System.UInt32;
using GLint64 = System.Int64;
using GLuint64 = System.UInt64;
using GLboolean = System.Byte;
using GLchar = System.Byte;
using GLfloat = System.Single;
using GLdouble = System.Double;
using GLsizeiptr = System.IntPtr;
using GLsync = System.IntPtr;
using GLintptr = System.IntPtr;
using GLubyte = System.Byte;
using GLbyte = System.SByte;
using GLshort = System.Int16;
using GLushort = System.UInt16;

[AttributeUsage(AttributeTargets.Parameter)]
public sealed class ConstAttribute:Attribute { }

[AttributeUsage(AttributeTargets.Delegate)]
public sealed class GlVersionAttribute:Attribute {

    public readonly int Major, Minor;

    public Version Version => 
        new(Major, Minor);

    public GlVersionAttribute (int major, int minor) =>
        (Major, Minor) = (major, minor);
}

public unsafe static class JesusChrist {
    public delegate void DEBUGPROC (int DO_NOT_USE_FFS);
    [GlVersion(2, 0)] public delegate void glActiveTexture (GLenum texture);
    [GlVersion(2, 0)] public delegate void glAttachShader (GLuint program, GLuint shader);
    [GlVersion(2, 0)] public delegate void glBeginQuery (GLenum target, GLuint id);
    [GlVersion(2, 0)] public delegate void glBindAttribLocation (GLuint program, GLuint index, [Const] GLchar* name);
    [GlVersion(2, 0)] public delegate void glBindBuffer (GLenum target, GLuint buffer);
    [GlVersion(2, 0)] public delegate void glBindTexture (GLenum target, GLuint texture);
    [GlVersion(2, 0)] public delegate void glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
    [GlVersion(2, 0)] public delegate void glBlendEquation (GLenum mode);
    [GlVersion(2, 0)] public delegate void glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);
    [GlVersion(2, 0)] public delegate void glBlendFunc (GLenum sfactor, GLenum dfactor);
    [GlVersion(2, 0)] public delegate void glBlendFuncSeparate (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    [GlVersion(2, 0)] public delegate void glBufferData (GLenum target, GLsizeiptr size, [Const] void* data, GLenum usage);
    [GlVersion(2, 0)] public delegate void glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, [Const] void* data);
    [GlVersion(2, 0)] public delegate void glClear (GLbitfield mask);
    [GlVersion(2, 0)] public delegate void glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
    [GlVersion(2, 0)] public delegate void glClearDepth (GLdouble depth);
    [GlVersion(2, 0)] public delegate void glClearStencil (GLint s);
    [GlVersion(2, 0)] public delegate void glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
    [GlVersion(2, 0)] public delegate void glCompileShader (GLuint shader);
    [GlVersion(2, 0)] public delegate void glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, [Const] void* data);
    [GlVersion(2, 0)] public delegate void glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, [Const] void* data);
    [GlVersion(2, 0)] public delegate void glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, [Const] void* data);
    [GlVersion(2, 0)] public delegate void glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, [Const] void* data);
    [GlVersion(2, 0)] public delegate void glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, [Const] void* data);
    [GlVersion(2, 0)] public delegate void glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, [Const] void* data);
    [GlVersion(2, 0)] public delegate void glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    [GlVersion(2, 0)] public delegate void glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    [GlVersion(2, 0)] public delegate void glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    [GlVersion(2, 0)] public delegate void glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    [GlVersion(2, 0)] public delegate void glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    [GlVersion(2, 0)] public delegate void glCullFace (GLenum mode);
    [GlVersion(2, 0)] public delegate void glDeleteBuffers (GLsizei n, [Const] GLuint* buffers);
    [GlVersion(2, 0)] public delegate void glDeleteProgram (GLuint program);
    [GlVersion(2, 0)] public delegate void glDeleteQueries (GLsizei n, [Const] GLuint* ids);
    [GlVersion(2, 0)] public delegate void glDeleteShader (GLuint shader);
    [GlVersion(2, 0)] public delegate void glDeleteTextures (GLsizei n, [Const] GLuint* textures);
    [GlVersion(2, 0)] public delegate void glDepthFunc (GLenum func);
    [GlVersion(2, 0)] public delegate void glDepthMask (GLboolean flag);
    [GlVersion(2, 0)] public delegate void glDepthRange (GLdouble nearVal, GLdouble farVal);
    [GlVersion(2, 0)] public delegate void glDetachShader (GLuint program, GLuint shader);
    [GlVersion(2, 0)] public delegate void glDisable (GLenum cap);
    [GlVersion(2, 0)] public delegate void glDisableVertexAttribArray (GLuint index);
    [GlVersion(2, 0)] public delegate void glDrawArrays (GLenum mode, GLint first, GLsizei count);
    [GlVersion(2, 0)] public delegate void glDrawBuffer (GLenum buf);
    [GlVersion(2, 0)] public delegate void glDrawBuffers (GLsizei n, [Const] GLenum* bufs);
    [GlVersion(2, 0)] public delegate void glDrawElements (GLenum mode, GLsizei count, GLenum type, [Const] void* indices);
    [GlVersion(2, 0)] public delegate void glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, [Const] void* indices);
    [GlVersion(2, 0)] public delegate void glEnable (GLenum cap);
    [GlVersion(2, 0)] public delegate void glEnableVertexAttribArray (GLuint index);
    [GlVersion(2, 0)] public delegate void glEndQuery (GLenum target);
    [GlVersion(2, 0)] public delegate void glFinish ();
    [GlVersion(2, 0)] public delegate void glFlush ();
    [GlVersion(2, 0)] public delegate void glFrontFace (GLenum mode);
    [GlVersion(2, 0)] public delegate void glGenBuffers (GLsizei n, GLuint* buffers);
    [GlVersion(2, 0)] public delegate void glGenQueries (GLsizei n, GLuint* ids);
    [GlVersion(2, 0)] public delegate void glGenTextures (GLsizei n, GLuint* textures);
    [GlVersion(2, 0)] public delegate void glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
    [GlVersion(2, 0)] public delegate void glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
    [GlVersion(2, 0)] public delegate void glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
    [GlVersion(2, 0)] public delegate void glGetBooleanv (GLenum pname, GLboolean* data);
    [GlVersion(2, 0)] public delegate void glGetBufferParameteriv (GLenum target, GLenum value, GLint* data);
    [GlVersion(2, 0)] public delegate void glGetBufferPointerv (GLenum target, GLenum pname, void** @params);
    [GlVersion(2, 0)] public delegate void glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, void* data);
    [GlVersion(2, 0)] public delegate void glGetCompressedTexImage (GLenum target, GLint level, void* pixels);
    [GlVersion(2, 0)] public delegate void glGetDoublev (GLenum pname, GLdouble* data);
    [GlVersion(2, 0)] public delegate void glGetFloatv (GLenum pname, GLfloat* data);
    [GlVersion(2, 0)] public delegate void glGetIntegerv (GLenum pname, GLint* data);
    [GlVersion(2, 0)] public delegate void glGetProgramInfoLog (GLuint program, GLsizei maxLength, GLsizei* length, GLchar* infoLog);
    [GlVersion(2, 0)] public delegate void glGetProgramiv (GLuint program, GLenum pname, GLint* @params);
    [GlVersion(2, 0)] public delegate void glGetQueryiv (GLenum target, GLenum pname, GLint* @params);
    [GlVersion(2, 0)] public delegate void glGetQueryObjectiv (GLuint id, GLenum pname, GLint* @params);
    [GlVersion(2, 0)] public delegate void glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint* @params);
    [GlVersion(2, 0)] public delegate void glGetShaderInfoLog (GLuint shader, GLsizei maxLength, GLsizei* length, GLchar* infoLog);
    [GlVersion(2, 0)] public delegate void glGetShaderiv (GLuint shader, GLenum pname, GLint* @params);
    [GlVersion(2, 0)] public delegate void glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
    [GlVersion(2, 0)] public delegate void glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, void* pixels);
    [GlVersion(2, 0)] public delegate void glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat* @params);
    [GlVersion(2, 0)] public delegate void glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint* @params);
    [GlVersion(2, 0)] public delegate void glGetTexParameterfv (GLenum target, GLenum pname, GLfloat* @params);
    [GlVersion(2, 0)] public delegate void glGetTexParameteriv (GLenum target, GLenum pname, GLint* @params);
    [GlVersion(2, 0)] public delegate void glGetUniformfv (GLuint program, GLint location, GLfloat* @params);
    [GlVersion(2, 0)] public delegate void glGetUniformiv (GLuint program, GLint location, GLint* @params);
    [GlVersion(2, 0)] public delegate void glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble* @params);
    [GlVersion(2, 0)] public delegate void glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat* @params);
    [GlVersion(2, 0)] public delegate void glGetVertexAttribiv (GLuint index, GLenum pname, GLint* @params);
    [GlVersion(2, 0)] public delegate void glGetVertexAttribPointerv (GLuint index, GLenum pname, void** pointer);
    [GlVersion(2, 0)] public delegate void glHint (GLenum target, GLenum mode);
    [GlVersion(2, 0)] public delegate void glLineWidth (GLfloat width);
    [GlVersion(2, 0)] public delegate void glLinkProgram (GLuint program);
    [GlVersion(2, 0)] public delegate void glLogicOp (GLenum opcode);
    [GlVersion(2, 0)] public delegate void glMultiDrawArrays (GLenum mode, [Const] GLint* first, [Const] GLsizei* count, GLsizei drawcount);
    [GlVersion(2, 0)] public delegate void glMultiDrawElements (GLenum mode, [Const] GLsizei* count, GLenum type, [Const] void** indices, GLsizei drawcount);
    [GlVersion(2, 0)] public delegate void glPixelStoref (GLenum pname, GLfloat param);
    [GlVersion(2, 0)] public delegate void glPixelStorei (GLenum pname, GLint param);
    [GlVersion(2, 0)] public delegate void glPointParameterf (GLenum pname, GLfloat param);
    [GlVersion(2, 0)] public delegate void glPointParameterfv (GLenum pname, [Const] GLfloat* @params);
    [GlVersion(2, 0)] public delegate void glPointParameteri (GLenum pname, GLint param);
    [GlVersion(2, 0)] public delegate void glPointParameteriv (GLenum pname, [Const] GLint* @params);
    [GlVersion(2, 0)] public delegate void glPointSize (GLfloat size);
    [GlVersion(2, 0)] public delegate void glPolygonMode (GLenum face, GLenum mode);
    [GlVersion(2, 0)] public delegate void glPolygonOffset (GLfloat factor, GLfloat units);
    [GlVersion(2, 0)] public delegate void glReadBuffer (GLenum mode);
    [GlVersion(2, 0)] public delegate void glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void* data);
    [GlVersion(2, 0)] public delegate void glSampleCoverage (GLfloat value, GLboolean invert);
    [GlVersion(2, 0)] public delegate void glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
    [GlVersion(2, 0)] public delegate void glShaderSource (GLuint shader, GLsizei count, [Const] GLchar** str, [Const] GLint* length);
    [GlVersion(2, 0)] public delegate void glStencilFunc (GLenum func, GLint r, GLuint mask);
    [GlVersion(2, 0)] public delegate void glStencilFuncSeparate (GLenum face, GLenum func, GLint r, GLuint mask);
    [GlVersion(2, 0)] public delegate void glStencilMask (GLuint mask);
    [GlVersion(2, 0)] public delegate void glStencilMaskSeparate (GLenum face, GLuint mask);
    [GlVersion(2, 0)] public delegate void glStencilOp (GLenum sfail, GLenum dpfail, GLenum dppass);
    [GlVersion(2, 0)] public delegate void glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
    [GlVersion(2, 0)] public delegate void glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, [Const] void* data);
    [GlVersion(2, 0)] public delegate void glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, [Const] void* data);
    [GlVersion(2, 0)] public delegate void glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, [Const] void* data);
    [GlVersion(2, 0)] public delegate void glTexParameterf (GLenum target, GLenum pname, GLfloat param);
    [GlVersion(2, 0)] public delegate void glTexParameterfv (GLenum target, GLenum pname, [Const] GLfloat* @params);
    [GlVersion(2, 0)] public delegate void glTexParameteri (GLenum target, GLenum pname, GLint param);
    [GlVersion(2, 0)] public delegate void glTexParameteriv (GLenum target, GLenum pname, [Const] GLint* @params);
    [GlVersion(2, 0)] public delegate void glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, [Const] void* pixels);
    [GlVersion(2, 0)] public delegate void glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, [Const] void* pixels);
    [GlVersion(2, 0)] public delegate void glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, [Const] void* pixels);
    [GlVersion(2, 0)] public delegate void glUniform1f (GLint location, GLfloat v0);
    [GlVersion(2, 0)] public delegate void glUniform1fv (GLint location, GLsizei count, [Const] GLfloat* value);
    [GlVersion(2, 0)] public delegate void glUniform1i (GLint location, GLint v0);
    [GlVersion(2, 0)] public delegate void glUniform1iv (GLint location, GLsizei count, [Const] GLint* value);
    [GlVersion(2, 0)] public delegate void glUniform2f (GLint location, GLfloat v0, GLfloat v1);
    [GlVersion(2, 0)] public delegate void glUniform2fv (GLint location, GLsizei count, [Const] GLfloat* value);
    [GlVersion(2, 0)] public delegate void glUniform2i (GLint location, GLint v0, GLint v1);
    [GlVersion(2, 0)] public delegate void glUniform2iv (GLint location, GLsizei count, [Const] GLint* value);
    [GlVersion(2, 0)] public delegate void glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    [GlVersion(2, 0)] public delegate void glUniform3fv (GLint location, GLsizei count, [Const] GLfloat* value);
    [GlVersion(2, 0)] public delegate void glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);
    [GlVersion(2, 0)] public delegate void glUniform3iv (GLint location, GLsizei count, [Const] GLint* value);
    [GlVersion(2, 0)] public delegate void glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    [GlVersion(2, 0)] public delegate void glUniform4fv (GLint location, GLsizei count, [Const] GLfloat* value);
    [GlVersion(2, 0)] public delegate void glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    [GlVersion(2, 0)] public delegate void glUniform4iv (GLint location, GLsizei count, [Const] GLint* value);
    [GlVersion(2, 0)] public delegate void glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(2, 0)] public delegate void glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(2, 0)] public delegate void glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(2, 0)] public delegate void glUseProgram (GLuint program);
    [GlVersion(2, 0)] public delegate void glValidateProgram (GLuint program);
    [GlVersion(2, 0)] public delegate void glVertexAttrib1d (GLuint index, GLdouble v0);
    [GlVersion(2, 0)] public delegate void glVertexAttrib1dv (GLuint index, [Const] GLdouble* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib1f (GLuint index, GLfloat v0);
    [GlVersion(2, 0)] public delegate void glVertexAttrib1fv (GLuint index, [Const] GLfloat* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib1s (GLuint index, GLshort v0);
    [GlVersion(2, 0)] public delegate void glVertexAttrib1sv (GLuint index, [Const] GLshort* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib2d (GLuint index, GLdouble v0, GLdouble v1);
    [GlVersion(2, 0)] public delegate void glVertexAttrib2dv (GLuint index, [Const] GLdouble* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib2f (GLuint index, GLfloat v0, GLfloat v1);
    [GlVersion(2, 0)] public delegate void glVertexAttrib2fv (GLuint index, [Const] GLfloat* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib2s (GLuint index, GLshort v0, GLshort v1);
    [GlVersion(2, 0)] public delegate void glVertexAttrib2sv (GLuint index, [Const] GLshort* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib3d (GLuint index, GLdouble v0, GLdouble v1, GLdouble v2);
    [GlVersion(2, 0)] public delegate void glVertexAttrib3dv (GLuint index, [Const] GLdouble* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib3f (GLuint index, GLfloat v0, GLfloat v1, GLfloat v2);
    [GlVersion(2, 0)] public delegate void glVertexAttrib3fv (GLuint index, [Const] GLfloat* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib3s (GLuint index, GLshort v0, GLshort v1, GLshort v2);
    [GlVersion(2, 0)] public delegate void glVertexAttrib3sv (GLuint index, [Const] GLshort* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4bv (GLuint index, [Const] GLbyte* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4d (GLuint index, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4dv (GLuint index, [Const] GLdouble* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4f (GLuint index, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4fv (GLuint index, [Const] GLfloat* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4iv (GLuint index, [Const] GLint* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4Nbv (GLuint index, [Const] GLbyte* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4Niv (GLuint index, [Const] GLint* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4Nsv (GLuint index, [Const] GLshort* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4Nub (GLuint index, GLubyte v0, GLubyte v1, GLubyte v2, GLubyte v3);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4Nubv (GLuint index, [Const] GLubyte* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4Nuiv (GLuint index, [Const] GLuint* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4Nusv (GLuint index, [Const] GLushort* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4s (GLuint index, GLshort v0, GLshort v1, GLshort v2, GLshort v3);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4sv (GLuint index, [Const] GLshort* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4ubv (GLuint index, [Const] GLubyte* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4uiv (GLuint index, [Const] GLuint* v);
    [GlVersion(2, 0)] public delegate void glVertexAttrib4usv (GLuint index, [Const] GLushort* v);
    [GlVersion(2, 0)] public delegate void glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, [Const] void* pointer);
    [GlVersion(2, 0)] public delegate void glViewport (GLint x, GLint y, GLsizei width, GLsizei height);
    [GlVersion(2, 1)] public delegate void glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(2, 1)] public delegate void glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(2, 1)] public delegate void glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(2, 1)] public delegate void glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(2, 1)] public delegate void glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(2, 1)] public delegate void glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(3, 0)] public delegate void glBeginConditionalRender (GLuint id, GLenum mode);
    [GlVersion(3, 0)] public delegate void glBeginTransformFeedback (GLenum primitiveMode);
    [GlVersion(3, 0)] public delegate void glBindBufferBase (GLenum target, GLuint index, GLuint buffer);
    [GlVersion(3, 0)] public delegate void glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    [GlVersion(3, 0)] public delegate void glBindFragDataLocation (GLuint program, GLuint colorNumber, [Const] char* name);
    [GlVersion(3, 0)] public delegate void glBindFramebuffer (GLenum target, GLuint framebuffer);
    [GlVersion(3, 0)] public delegate void glBindRenderbuffer (GLenum target, GLuint renderbuffer);
    [GlVersion(3, 0)] public delegate void glBindVertexArray (GLuint array);
    [GlVersion(3, 0)] public delegate void glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    [GlVersion(3, 0)] public delegate void glClampColor (GLenum target, GLenum clamp);
    [GlVersion(3, 0)] public delegate void glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
    [GlVersion(3, 0)] public delegate void glClearBufferfv (GLenum buffer, GLint drawbuffer, [Const] GLfloat* value);
    [GlVersion(3, 0)] public delegate void glClearBufferiv (GLenum buffer, GLint drawbuffer, [Const] GLint* value);
    [GlVersion(3, 0)] public delegate void glClearBufferuiv (GLenum buffer, GLint drawbuffer, [Const] GLuint* value);
    [GlVersion(3, 0)] public delegate void glColorMaski (GLuint buf, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
    [GlVersion(3, 0)] public delegate void glDeleteFramebuffers (GLsizei n, GLuint* framebuffers);
    [GlVersion(3, 0)] public delegate void glDeleteRenderbuffers (GLsizei n, GLuint* renderbuffers);
    [GlVersion(3, 0)] public delegate void glDeleteVertexArrays (GLsizei n, [Const] GLuint* arrays);
    [GlVersion(3, 0)] public delegate void glDisablei (GLenum cap, GLuint index);
    [GlVersion(3, 0)] public delegate void glEnablei (GLenum cap, GLuint index);
    [GlVersion(3, 0)] public delegate void glEndConditionalRender ();
    [GlVersion(3, 0)] public delegate void glEndTransformFeedback ();
    [GlVersion(3, 0)] public delegate void glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length);
    [GlVersion(3, 0)] public delegate void glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    [GlVersion(3, 0)] public delegate void glFramebufferTexture1D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    [GlVersion(3, 0)] public delegate void glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    [GlVersion(3, 0)] public delegate void glFramebufferTexture3D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint layer);
    [GlVersion(3, 0)] public delegate void glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    [GlVersion(3, 0)] public delegate void glGenerateMipmap (GLenum target);
    [GlVersion(3, 0)] public delegate void glGenFramebuffers (GLsizei n, GLuint* ids);
    [GlVersion(3, 0)] public delegate void glGenRenderbuffers (GLsizei n, GLuint* renderbuffers);
    [GlVersion(3, 0)] public delegate void glGenVertexArrays (GLsizei n, GLuint* arrays);
    [GlVersion(3, 0)] public delegate void glGetBooleani_v (GLenum target, GLuint index, GLboolean* data);
    [GlVersion(3, 0)] public delegate void glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint* @params);
    [GlVersion(3, 0)] public delegate void glGetIntegeri_v (GLenum target, GLuint index, GLint* data);
    [GlVersion(3, 0)] public delegate void glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint* @params);
    [GlVersion(3, 0)] public delegate void glGetTexParameterIiv (GLenum target, GLenum pname, GLint* @params);
    [GlVersion(3, 0)] public delegate void glGetTexParameterIuiv (GLenum target, GLenum pname, GLuint* @params);
    [GlVersion(3, 0)] public delegate void glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, char* name);
    [GlVersion(3, 0)] public delegate void glGetUniformuiv (GLuint program, GLint location, GLuint* @params);
    [GlVersion(3, 0)] public delegate void glGetVertexAttribIiv (GLuint index, GLenum pname, GLint* @params);
    [GlVersion(3, 0)] public delegate void glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint* @params);
    [GlVersion(3, 0)] public delegate void glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
    [GlVersion(3, 0)] public delegate void glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    [GlVersion(3, 0)] public delegate void glTexParameterIiv (GLenum target, GLenum pname, [Const] GLint* @params);
    [GlVersion(3, 0)] public delegate void glTexParameterIuiv (GLenum target, GLenum pname, [Const] GLuint* @params);
    [GlVersion(3, 0)] public delegate void glTransformFeedbackVaryings (GLuint program, GLsizei count, [Const] char** varyings, GLenum bufferMode);
    [GlVersion(3, 0)] public delegate void glUniform1ui (GLint location, GLuint v0);
    [GlVersion(3, 0)] public delegate void glUniform1uiv (GLint location, GLsizei count, [Const] GLuint* value);
    [GlVersion(3, 0)] public delegate void glUniform2ui (GLint location, GLuint v0, GLuint v1);
    [GlVersion(3, 0)] public delegate void glUniform2uiv (GLint location, GLsizei count, [Const] GLuint* value);
    [GlVersion(3, 0)] public delegate void glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2);
    [GlVersion(3, 0)] public delegate void glUniform3uiv (GLint location, GLsizei count, [Const] GLuint* value);
    [GlVersion(3, 0)] public delegate void glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    [GlVersion(3, 0)] public delegate void glUniform4uiv (GLint location, GLsizei count, [Const] GLuint* value);
    [GlVersion(3, 0)] public delegate void glVertexAttribI1i (GLuint index, GLint v0);
    [GlVersion(3, 0)] public delegate void glVertexAttribI1iv (GLuint index, [Const] GLint* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribI1ui (GLuint index, GLuint v0);
    [GlVersion(3, 0)] public delegate void glVertexAttribI1uiv (GLuint index, [Const] GLuint* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribI2i (GLuint index, GLint v0, GLint v1);
    [GlVersion(3, 0)] public delegate void glVertexAttribI2iv (GLuint index, [Const] GLint* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribI2ui (GLuint index, GLuint v0, GLuint v1);
    [GlVersion(3, 0)] public delegate void glVertexAttribI2uiv (GLuint index, [Const] GLuint* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribI3i (GLuint index, GLint v0, GLint v1, GLint v2);
    [GlVersion(3, 0)] public delegate void glVertexAttribI3iv (GLuint index, [Const] GLint* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribI3ui (GLuint index, GLuint v0, GLuint v1, GLuint v2);
    [GlVersion(3, 0)] public delegate void glVertexAttribI3uiv (GLuint index, [Const] GLuint* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribI4bv (GLuint index, [Const] GLbyte* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribI4i (GLuint index, GLint v0, GLint v1, GLint v2, GLint v3);
    [GlVersion(3, 0)] public delegate void glVertexAttribI4iv (GLuint index, [Const] GLint* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribI4sv (GLuint index, [Const] GLshort* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribI4ubv (GLuint index, [Const] GLubyte* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribI4ui (GLuint index, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    [GlVersion(3, 0)] public delegate void glVertexAttribI4uiv (GLuint index, [Const] GLuint* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribI4usv (GLuint index, [Const] GLushort* v);
    [GlVersion(3, 0)] public delegate void glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei stride, [Const] void* pointer);
    [GlVersion(3, 1)] public delegate void glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    [GlVersion(3, 1)] public delegate void glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
    [GlVersion(3, 1)] public delegate void glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, [Const] void* indices, GLsizei instancecount);
    [GlVersion(3, 1)] public delegate void glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* @params);
    [GlVersion(3, 1)] public delegate void glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
    [GlVersion(3, 1)] public delegate void glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);
    [GlVersion(3, 1)] public delegate void glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, [Const] GLuint* uniformIndices, GLenum pname, GLint* @params);
    [GlVersion(3, 1)] public delegate void glGetUniformIndices (GLuint program, GLsizei uniformCount, [Const] GLchar** uniformNames, GLuint* uniformIndices);
    [GlVersion(3, 1)] public delegate void glPrimitiveRestartIndex (GLuint index);
    [GlVersion(3, 1)] public delegate void glTexBuffer (GLenum target, GLenum internalformat, GLuint buffer);
    [GlVersion(3, 1)] public delegate void glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
    [GlVersion(3, 2)] public delegate void glBindFragDataLocationIndexed (GLuint program, GLuint colorNumber, GLuint index, [Const] char* name);
    [GlVersion(3, 2)] public delegate void glDeleteSync (GLsync sync);
    [GlVersion(3, 2)] public delegate void glDrawElementsBaseVertex (GLenum mode, GLsizei count, GLenum type, void* indices, GLint basevertex);
    [GlVersion(3, 2)] public delegate void glDrawElementsInstancedBaseVertex (GLenum mode, GLsizei count, GLenum type, void* indices, GLsizei instancecount, GLint basevertex);
    [GlVersion(3, 2)] public delegate void glDrawRangeElementsBaseVertex (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, void* indices, GLint basevertex);
    [GlVersion(3, 2)] public delegate void glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLint level);
    [GlVersion(3, 2)] public delegate void glGetBufferParameteri64v (GLenum target, GLenum value, GLint64* data);
    [GlVersion(3, 2)] public delegate void glGetInteger64i_v (GLenum target, GLuint index, GLint64* data);
    [GlVersion(3, 2)] public delegate void glGetInteger64v (GLenum pname, GLint64* data);
    [GlVersion(3, 2)] public delegate void glGetMultisamplefv (GLenum pname, GLuint index, GLfloat* val);
    [GlVersion(3, 2)] public delegate void glGetQueryObjecti64v (GLuint id, GLenum pname, GLint64* @params);
    [GlVersion(3, 2)] public delegate void glGetQueryObjectui64v (GLuint id, GLenum pname, GLuint64* @params);
    [GlVersion(3, 2)] public delegate void glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat* @params);
    [GlVersion(3, 2)] public delegate void glGetSamplerParameterIiv (GLuint sampler, GLenum pname, GLint* @params);
    [GlVersion(3, 2)] public delegate void glGetSamplerParameterIuiv (GLuint sampler, GLenum pname, GLuint* @params);
    [GlVersion(3, 2)] public delegate void glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint* @params);
    [GlVersion(3, 2)] public delegate void glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei* length, GLint* values);
    [GlVersion(3, 2)] public delegate void glMultiDrawElementsBaseVertex (GLenum mode, [Const] GLsizei* count, GLenum type, [Const] void** indices, GLsizei drawcount, [Const] GLint* basevertex);
    [GlVersion(3, 2)] public delegate void glProvokingVertex (GLenum provokeMode);
    [GlVersion(3, 2)] public delegate void glQueryCounter (GLuint id, GLenum target);
    [GlVersion(3, 2)] public delegate void glSampleMaski (GLuint maskNumber, GLbitfield mask);
    [GlVersion(3, 2)] public delegate void glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param);
    [GlVersion(3, 2)] public delegate void glSamplerParameterfv (GLuint sampler, GLenum pname, [Const] GLfloat* @params);
    [GlVersion(3, 2)] public delegate void glSamplerParameteri (GLuint sampler, GLenum pname, GLint param);
    [GlVersion(3, 2)] public delegate void glSamplerParameterIiv (GLuint sampler, GLenum pname, [Const] GLint* @params);
    [GlVersion(3, 2)] public delegate void glSamplerParameterIuiv (GLuint sampler, GLenum pname, [Const] GLuint* @params);
    [GlVersion(3, 2)] public delegate void glSamplerParameteriv (GLuint sampler, GLenum pname, [Const] GLint* @params);
    [GlVersion(3, 2)] public delegate void glTexImage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    [GlVersion(3, 2)] public delegate void glTexImage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    [GlVersion(3, 2)] public delegate void glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);
    [GlVersion(3, 3)] public delegate void glBindSampler (GLuint unit, GLuint sampler);
    [GlVersion(3, 3)] public delegate void glDeleteSamplers (GLsizei n, [Const] GLuint* samplers);
    [GlVersion(3, 3)] public delegate void glGenSamplers (GLsizei n, GLuint* samplers);
    [GlVersion(3, 3)] public delegate void glVertexAttribDivisor (GLuint index, GLuint divisor);
    [GlVersion(3, 3)] public delegate void glVertexAttribP1ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
    [GlVersion(3, 3)] public delegate void glVertexAttribP2ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
    [GlVersion(3, 3)] public delegate void glVertexAttribP3ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
    [GlVersion(3, 3)] public delegate void glVertexAttribP4ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
    [GlVersion(4, 0)] public delegate void glBeginQueryIndexed (GLenum target, GLuint index, GLuint id);
    [GlVersion(4, 0)] public delegate void glBindTransformFeedback (GLenum target, GLuint id);
    [GlVersion(4, 0)] public delegate void glBlendEquationi (GLuint buf, GLenum mode);
    [GlVersion(4, 0)] public delegate void glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    [GlVersion(4, 0)] public delegate void glBlendFunci (GLuint buf, GLenum sfactor, GLenum dfactor);
    [GlVersion(4, 0)] public delegate void glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    [GlVersion(4, 0)] public delegate void glDeleteTransformFeedbacks (GLsizei n, [Const] GLuint* ids);
    [GlVersion(4, 0)] public delegate void glDrawArraysIndirect (GLenum mode, [Const] void* indirect);
    [GlVersion(4, 0)] public delegate void glDrawElementsIndirect (GLenum mode, GLenum type, [Const] void* indirect);
    [GlVersion(4, 0)] public delegate void glDrawTransformFeedback (GLenum mode, GLuint id);
    [GlVersion(4, 0)] public delegate void glDrawTransformFeedbackStream (GLenum mode, GLuint id, GLuint stream);
    [GlVersion(4, 0)] public delegate void glEndQueryIndexed (GLenum target, GLuint index);
    [GlVersion(4, 0)] public delegate void glGenTransformFeedbacks (GLsizei n, GLuint* ids);
    [GlVersion(4, 0)] public delegate void glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei* length, GLchar* name);
    [GlVersion(4, 0)] public delegate void glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint* values);
    [GlVersion(4, 0)] public delegate void glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei* length, GLchar* name);
    [GlVersion(4, 0)] public delegate void glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint* values);
    [GlVersion(4, 0)] public delegate void glGetQueryIndexediv (GLenum target, GLuint index, GLenum pname, GLint* @params);
    [GlVersion(4, 0)] public delegate void glGetUniformdv (GLuint program, GLint location, GLdouble* @params);
    [GlVersion(4, 0)] public delegate void glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint* values);
    [GlVersion(4, 0)] public delegate void glMinSampleShading (GLfloat value);
    [GlVersion(4, 0)] public delegate void glPatchParameterfv (GLenum pname, [Const] GLfloat* values);
    [GlVersion(4, 0)] public delegate void glPatchParameteri (GLenum pname, GLint value);
    [GlVersion(4, 0)] public delegate void glPauseTransformFeedback ();
    [GlVersion(4, 0)] public delegate void glResumeTransformFeedback ();
    [GlVersion(4, 0)] public delegate void glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, [Const] GLuint* indices);
    [GlVersion(4, 1)] public delegate void glActiveShaderProgram (GLuint pipeline, GLuint program);
    [GlVersion(4, 1)] public delegate void glBindProgramPipeline (GLuint pipeline);
    [GlVersion(4, 1)] public delegate void glClearDepthf (GLfloat depth);
    [GlVersion(4, 1)] public delegate void glDeleteProgramPipelines (GLsizei n, [Const] GLuint* pipelines);
    [GlVersion(4, 1)] public delegate void glDepthRangeArrayv (GLuint first, GLsizei count, [Const] GLdouble* v);
    [GlVersion(4, 1)] public delegate void glDepthRangef (GLfloat nearVal, GLfloat farVal);
    [GlVersion(4, 1)] public delegate void glDepthRangeIndexed (GLuint index, GLdouble nearVal, GLdouble farVal);
    [GlVersion(4, 1)] public delegate void glGenProgramPipelines (GLsizei n, GLuint* pipelines);
    [GlVersion(4, 1)] public delegate void glGetDoublei_v (GLenum target, GLuint index, GLdouble* data);
    [GlVersion(4, 1)] public delegate void glGetFloati_v (GLenum target, GLuint index, GLfloat* data);
    [GlVersion(4, 1)] public delegate void glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei* length, GLenum* binaryFormat, void* binary);
    [GlVersion(4, 1)] public delegate void glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
    [GlVersion(4, 1)] public delegate void glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint* @params);
    [GlVersion(4, 1)] public delegate void glGetShaderPrecisionFormat (GLenum shaderType, GLenum precisionType, GLint* range, GLint* precision);
    [GlVersion(4, 1)] public delegate void glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble* @params);
    [GlVersion(4, 1)] public delegate void glProgramBinary (GLuint program, GLenum binaryFormat, [Const] void* binary, GLsizei length);
    [GlVersion(4, 1)] public delegate void glProgramParameteri (GLuint program, GLenum pname, GLint value);
    [GlVersion(4, 1)] public delegate void glProgramUniform1f (GLuint program, GLint location, GLfloat v0);
    [GlVersion(4, 1)] public delegate void glProgramUniform1fv (GLuint program, GLint location, GLsizei count, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniform1i (GLuint program, GLint location, GLint v0);
    [GlVersion(4, 1)] public delegate void glProgramUniform1iv (GLuint program, GLint location, GLsizei count, [Const] GLint* value);
    [GlVersion(4, 1)] public delegate void glProgramUniform1ui (GLuint program, GLint location, GLuint v0);
    [GlVersion(4, 1)] public delegate void glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, [Const] GLuint* value);
    [GlVersion(4, 1)] public delegate void glProgramUniform2f (GLuint program, GLint location, GLfloat v0, GLfloat v1);
    [GlVersion(4, 1)] public delegate void glProgramUniform2fv (GLuint program, GLint location, GLsizei count, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniform2i (GLuint program, GLint location, GLint v0, GLint v1);
    [GlVersion(4, 1)] public delegate void glProgramUniform2iv (GLuint program, GLint location, GLsizei count, [Const] GLint* value);
    [GlVersion(4, 1)] public delegate void glProgramUniform2ui (GLuint program, GLint location, GLuint v0, GLuint v1);
    [GlVersion(4, 1)] public delegate void glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, [Const] GLuint* value);
    [GlVersion(4, 1)] public delegate void glProgramUniform3f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    [GlVersion(4, 1)] public delegate void glProgramUniform3fv (GLuint program, GLint location, GLsizei count, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniform3i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
    [GlVersion(4, 1)] public delegate void glProgramUniform3iv (GLuint program, GLint location, GLsizei count, [Const] GLint* value);
    [GlVersion(4, 1)] public delegate void glProgramUniform3ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
    [GlVersion(4, 1)] public delegate void glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, [Const] GLuint* value);
    [GlVersion(4, 1)] public delegate void glProgramUniform4f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    [GlVersion(4, 1)] public delegate void glProgramUniform4fv (GLuint program, GLint location, GLsizei count, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniform4i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    [GlVersion(4, 1)] public delegate void glProgramUniform4iv (GLuint program, GLint location, GLsizei count, [Const] GLint* value);
    [GlVersion(4, 1)] public delegate void glProgramUniform4ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    [GlVersion(4, 1)] public delegate void glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, [Const] GLuint* value);
    [GlVersion(4, 1)] public delegate void glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, [Const] GLfloat* value);
    [GlVersion(4, 1)] public delegate void glReleaseShaderCompiler ();
    [GlVersion(4, 1)] public delegate void glScissorArrayv (GLuint first, GLsizei count, [Const] GLint* v);
    [GlVersion(4, 1)] public delegate void glScissorIndexed (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
    [GlVersion(4, 1)] public delegate void glScissorIndexedv (GLuint index, [Const] GLint* v);
    [GlVersion(4, 1)] public delegate void glShaderBinary (GLsizei count, [Const] GLuint* shaders, GLenum binaryFormat, [Const] void* binary, GLsizei length);
    [GlVersion(4, 1)] public delegate void glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);
    [GlVersion(4, 1)] public delegate void glValidateProgramPipeline (GLuint pipeline);
    [GlVersion(4, 1)] public delegate void glVertexAttribL1d (GLuint index, GLdouble v0);
    [GlVersion(4, 1)] public delegate void glVertexAttribL1dv (GLuint index, [Const] GLdouble* v);
    [GlVersion(4, 1)] public delegate void glVertexAttribL2d (GLuint index, GLdouble v0, GLdouble v1);
    [GlVersion(4, 1)] public delegate void glVertexAttribL2dv (GLuint index, [Const] GLdouble* v);
    [GlVersion(4, 1)] public delegate void glVertexAttribL3d (GLuint index, GLdouble v0, GLdouble v1, GLdouble v2);
    [GlVersion(4, 1)] public delegate void glVertexAttribL3dv (GLuint index, [Const] GLdouble* v);
    [GlVersion(4, 1)] public delegate void glVertexAttribL4d (GLuint index, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
    [GlVersion(4, 1)] public delegate void glVertexAttribL4dv (GLuint index, [Const] GLdouble* v);
    [GlVersion(4, 1)] public delegate void glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei stride, [Const] void* pointer);
    [GlVersion(4, 1)] public delegate void glViewportArrayv (GLuint first, GLsizei count, [Const] GLfloat* v);
    [GlVersion(4, 1)] public delegate void glViewportIndexedf (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
    [GlVersion(4, 1)] public delegate void glViewportIndexedfv (GLuint index, [Const] GLfloat* v);
    [GlVersion(4, 2)] public delegate void glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
    [GlVersion(4, 2)] public delegate void glDrawArraysInstancedBaseInstance (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
    [GlVersion(4, 2)] public delegate void glDrawElementsInstancedBaseInstance (GLenum mode, GLsizei count, GLenum type, [Const] void* indices, GLsizei instancecount, GLuint baseinstance);
    [GlVersion(4, 2)] public delegate void glDrawElementsInstancedBaseVertexBaseInstance (GLenum mode, GLsizei count, GLenum type, void* indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
    [GlVersion(4, 2)] public delegate void glDrawTransformFeedbackInstanced (GLenum mode, GLuint id, GLsizei instancecount);
    [GlVersion(4, 2)] public delegate void glDrawTransformFeedbackStreamInstanced (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
    [GlVersion(4, 2)] public delegate void glGetActiveAtomicCounterBufferiv (GLuint program, GLuint bufferIndex, GLenum pname, GLint* @params);
    [GlVersion(4, 2)] public delegate void glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint* @params);
    [GlVersion(4, 2)] public delegate void glMemoryBarrier (GLbitfield barriers);
    [GlVersion(4, 2)] public delegate void glTexStorage1D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
    [GlVersion(4, 2)] public delegate void glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    [GlVersion(4, 2)] public delegate void glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    [GlVersion(4, 3)] public delegate void glBindVertexBuffer (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    [GlVersion(4, 3)] public delegate void glClearBufferData (GLenum target, GLenum internalformat, GLenum format, GLenum type, [Const] void* data);
    [GlVersion(4, 3)] public delegate void glClearBufferSubData (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, [Const] void* data);
    [GlVersion(4, 3)] public delegate void glCopyImageSubData (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
    [GlVersion(4, 3)] public delegate void glDebugMessageCallback (DEBUGPROC callback, [Const] void* userParam);
    [GlVersion(4, 3)] public delegate void glDebugMessageControl (GLenum source, GLenum type, GLenum severity, GLsizei count, [Const] GLuint* ids, GLboolean enabled);
    [GlVersion(4, 3)] public delegate void glDebugMessageInsert (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, [Const] char* message);
    [GlVersion(4, 3)] public delegate void glDispatchCompute (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
    [GlVersion(4, 3)] public delegate void glDispatchComputeIndirect (GLintptr indirect);
    [GlVersion(4, 3)] public delegate void glFramebufferParameteri (GLenum target, GLenum pname, GLint param);
    [GlVersion(4, 3)] public delegate void glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint* @params);
    [GlVersion(4, 3)] public delegate void glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64* @params);
    [GlVersion(4, 3)] public delegate void glGetObjectLabel (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei* length, char* label);
    [GlVersion(4, 3)] public delegate void glGetObjectPtrLabel (void* ptr, GLsizei bufSize, GLsizei* length, char* label);
    [GlVersion(4, 3)] public delegate void glGetPointerv (GLenum pname, void** @params);
    [GlVersion(4, 3)] public delegate void glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pname, GLint* @params);
    [GlVersion(4, 3)] public delegate void glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, [Const] GLenum* props, GLsizei bufSize, GLsizei* length, GLint* @params);
    [GlVersion(4, 3)] public delegate void glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei* length, char* name);
    [GlVersion(4, 3)] public delegate void glInvalidateBufferData (GLuint buffer);
    [GlVersion(4, 3)] public delegate void glInvalidateBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr length);
    [GlVersion(4, 3)] public delegate void glInvalidateFramebuffer (GLenum target, GLsizei numAttachments, [Const] GLenum* attachments);
    [GlVersion(4, 3)] public delegate void glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, [Const] GLenum* attachments, GLint x, GLint y, GLint width, GLint height);
    [GlVersion(4, 3)] public delegate void glInvalidateTexImage (GLuint texture, GLint level);
    [GlVersion(4, 3)] public delegate void glInvalidateTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
    [GlVersion(4, 3)] public delegate void glMultiDrawArraysIndirect (GLenum mode, [Const] void* indirect, GLsizei drawcount, GLsizei stride);
    [GlVersion(4, 3)] public delegate void glMultiDrawElementsIndirect (GLenum mode, GLenum type, [Const] void* indirect, GLsizei drawcount, GLsizei stride);
    [GlVersion(4, 3)] public delegate void glObjectLabel (GLenum identifier, GLuint name, GLsizei length, [Const] char* label);
    [GlVersion(4, 3)] public delegate void glObjectPtrLabel (void* ptr, GLsizei length, [Const] char* label);
    [GlVersion(4, 3)] public delegate void glPopDebugGroup ();
    [GlVersion(4, 3)] public delegate void glPushDebugGroup (GLenum source, GLuint id, GLsizei length, [Const] char* message);
    [GlVersion(4, 3)] public delegate void glShaderStorageBlockBinding (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
    [GlVersion(4, 3)] public delegate void glTexBufferRange (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    [GlVersion(4, 3)] public delegate void glTexStorage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    [GlVersion(4, 3)] public delegate void glTexStorage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    [GlVersion(4, 3)] public delegate void glTextureView (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
    [GlVersion(4, 3)] public delegate void glVertexAttribBinding (GLuint attribindex, GLuint bindingindex);
    [GlVersion(4, 3)] public delegate void glVertexAttribFormat (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    [GlVersion(4, 3)] public delegate void glVertexAttribIFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    [GlVersion(4, 3)] public delegate void glVertexAttribLFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    [GlVersion(4, 3)] public delegate void glVertexBindingDivisor (GLuint bindingindex, GLuint divisor);
    [GlVersion(4, 4)] public delegate void glBindBuffersBase (GLenum target, GLuint first, GLsizei count, [Const] GLuint* buffers);
    [GlVersion(4, 4)] public delegate void glBindBuffersRange (GLenum target, GLuint first, GLsizei count, [Const] GLuint* buffers, [Const] GLintptr* offsets, [Const] GLintptr* sizes);
    [GlVersion(4, 4)] public delegate void glBindImageTextures (GLuint first, GLsizei count, [Const] GLuint* textures);
    [GlVersion(4, 4)] public delegate void glBindSamplers (GLuint first, GLsizei count, [Const] GLuint* samplers);
    [GlVersion(4, 4)] public delegate void glBindTextures (GLuint first, GLsizei count, [Const] GLuint* textures);
    [GlVersion(4, 4)] public delegate void glBindVertexBuffers (GLuint first, GLsizei count, [Const] GLuint* buffers, [Const] GLintptr* offsets, [Const] GLsizei* strides);
    [GlVersion(4, 4)] public delegate void glBufferStorage (GLenum target, GLsizeiptr size, [Const] void* data, GLbitfield flags);
    [GlVersion(4, 4)] public delegate void glClearTexImage (GLuint texture, GLint level, GLenum format, GLenum type, [Const] void* data);
    [GlVersion(4, 4)] public delegate void glClearTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, [Const] void* data);
    [GlVersion(4, 5)] public delegate void glBindTextureUnit (GLuint unit, GLuint texture);
    [GlVersion(4, 5)] public delegate void glBlitNamedFramebuffer (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    [GlVersion(4, 5)] public delegate void glClearNamedBufferData (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, [Const] void* data);
    [GlVersion(4, 5)] public delegate void glClearNamedBufferSubData (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, [Const] void* data);
    [GlVersion(4, 5)] public delegate void glClearNamedFramebufferfi (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
    [GlVersion(4, 5)] public delegate void glClearNamedFramebufferfv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, [Const] GLfloat* value);
    [GlVersion(4, 5)] public delegate void glClearNamedFramebufferiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, [Const] GLint* value);
    [GlVersion(4, 5)] public delegate void glClearNamedFramebufferuiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, [Const] GLuint* value);
    [GlVersion(4, 5)] public delegate void glClipControl (GLenum origin, GLenum depth);
    [GlVersion(4, 5)] public delegate void glCompressedTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, [Const] void* data);
    [GlVersion(4, 5)] public delegate void glCompressedTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, [Const] void* data);
    [GlVersion(4, 5)] public delegate void glCompressedTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, [Const] void* data);
    [GlVersion(4, 5)] public delegate void glCopyNamedBufferSubData (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    [GlVersion(4, 5)] public delegate void glCopyTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    [GlVersion(4, 5)] public delegate void glCopyTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    [GlVersion(4, 5)] public delegate void glCopyTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    [GlVersion(4, 5)] public delegate void glCreateBuffers (GLsizei n, GLuint* buffers);
    [GlVersion(4, 5)] public delegate void glCreateFramebuffers (GLsizei n, GLuint* framebuffers);
    [GlVersion(4, 5)] public delegate void glCreateProgramPipelines (GLsizei n, GLuint* pipelines);
    [GlVersion(4, 5)] public delegate void glCreateQueries (GLenum target, GLsizei n, GLuint* ids);
    [GlVersion(4, 5)] public delegate void glCreateRenderbuffers (GLsizei n, GLuint* renderbuffers);
    [GlVersion(4, 5)] public delegate void glCreateSamplers (GLsizei n, GLuint* samplers);
    [GlVersion(4, 5)] public delegate void glCreateTextures (GLenum target, GLsizei n, GLuint* textures);
    [GlVersion(4, 5)] public delegate void glCreateTransformFeedbacks (GLsizei n, GLuint* ids);
    [GlVersion(4, 5)] public delegate void glCreateVertexArrays (GLsizei n, GLuint* arrays);
    [GlVersion(4, 5)] public delegate void glDisableVertexArrayAttrib (GLuint vaobj, GLuint index);
    [GlVersion(4, 5)] public delegate void glEnableVertexArrayAttrib (GLuint vaobj, GLuint index);
    [GlVersion(4, 5)] public delegate void glFlushMappedNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length);
    [GlVersion(4, 5)] public delegate void glGenerateTextureMipmap (GLuint texture);
    [GlVersion(4, 5)] public delegate void glGetCompressedTextureImage (GLuint texture, GLint level, GLsizei bufSize, void* pixels);
    [GlVersion(4, 5)] public delegate void glGetCompressedTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void* pixels);
    [GlVersion(4, 5)] public delegate void glGetNamedBufferParameteri64v (GLuint buffer, GLenum pname, GLint64* @params);
    [GlVersion(4, 5)] public delegate void glGetNamedBufferParameteriv (GLuint buffer, GLenum pname, GLint* @params);
    [GlVersion(4, 5)] public delegate void glGetNamedBufferPointerv (GLuint buffer, GLenum pname, void** @params);
    [GlVersion(4, 5)] public delegate void glGetNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, void* data);
    [GlVersion(4, 5)] public delegate void glGetNamedFramebufferAttachmentParameteriv (GLuint framebuffer, GLenum attachment, GLenum pname, GLint* @params);
    [GlVersion(4, 5)] public delegate void glGetNamedFramebufferParameteriv (GLuint framebuffer, GLenum pname, GLint* param);
    [GlVersion(4, 5)] public delegate void glGetNamedRenderbufferParameteriv (GLuint renderbuffer, GLenum pname, GLint* @params);
    [GlVersion(4, 5)] public delegate void glGetnCompressedTexImage (GLenum target, GLint level, GLsizei bufSize, void* pixels);
    [GlVersion(4, 5)] public delegate void glGetnTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void* pixels);
    [GlVersion(4, 5)] public delegate void glGetnUniformdv (GLuint program, GLint location, GLsizei bufSize, GLdouble* @params);
    [GlVersion(4, 5)] public delegate void glGetnUniformfv (GLuint program, GLint location, GLsizei bufSize, GLfloat* @params);
    [GlVersion(4, 5)] public delegate void glGetnUniformiv (GLuint program, GLint location, GLsizei bufSize, GLint* @params);
    [GlVersion(4, 5)] public delegate void glGetnUniformuiv (GLuint program, GLint location, GLsizei bufSize, GLuint* @params);
    [GlVersion(4, 5)] public delegate void glGetQueryBufferObjecti64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    [GlVersion(4, 5)] public delegate void glGetQueryBufferObjectiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    [GlVersion(4, 5)] public delegate void glGetQueryBufferObjectui64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    [GlVersion(4, 5)] public delegate void glGetQueryBufferObjectuiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    [GlVersion(4, 5)] public delegate void glGetTextureImage (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void* pixels);
    [GlVersion(4, 5)] public delegate void glGetTextureLevelParameterfv (GLuint texture, GLint level, GLenum pname, GLfloat* @params);
    [GlVersion(4, 5)] public delegate void glGetTextureLevelParameteriv (GLuint texture, GLint level, GLenum pname, GLint* @params);
    [GlVersion(4, 5)] public delegate void glGetTextureParameterfv (GLuint texture, GLenum pname, GLfloat* @params);
    [GlVersion(4, 5)] public delegate void glGetTextureParameterIiv (GLuint texture, GLenum pname, GLint* @params);
    [GlVersion(4, 5)] public delegate void glGetTextureParameterIuiv (GLuint texture, GLenum pname, GLuint* @params);
    [GlVersion(4, 5)] public delegate void glGetTextureParameteriv (GLuint texture, GLenum pname, GLint* @params);
    [GlVersion(4, 5)] public delegate void glGetTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void* pixels);
    [GlVersion(4, 5)] public delegate void glGetTransformFeedbacki_v (GLuint xfb, GLenum pname, GLuint index, GLint* param);
    [GlVersion(4, 5)] public delegate void glGetTransformFeedbackiv (GLuint xfb, GLenum pname, GLint* param);
    [GlVersion(4, 5)] public delegate void glGetVertexArrayIndexed64iv (GLuint vaobj, GLuint index, GLenum pname, GLint64* param);
    [GlVersion(4, 5)] public delegate void glGetVertexArrayIndexediv (GLuint vaobj, GLuint index, GLenum pname, GLint* param);
    [GlVersion(4, 5)] public delegate void glGetVertexArrayiv (GLuint vaobj, GLenum pname, GLint* param);
    [GlVersion(4, 5)] public delegate void glInvalidateNamedFramebufferData (GLuint framebuffer, GLsizei numAttachments, [Const] GLenum* attachments);
    [GlVersion(4, 5)] public delegate void glInvalidateNamedFramebufferSubData (GLuint framebuffer, GLsizei numAttachments, [Const] GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height);
    [GlVersion(4, 5)] public delegate void glMemoryBarrierByRegion (GLbitfield barriers);
    [GlVersion(4, 5)] public delegate void glNamedBufferData (GLuint buffer, GLsizeiptr size, [Const] void* data, GLenum usage);
    [GlVersion(4, 5)] public delegate void glNamedBufferStorage (GLuint buffer, GLsizeiptr size, [Const] void* data, GLbitfield flags);
    [GlVersion(4, 5)] public delegate void glNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, [Const] void* data);
    [GlVersion(4, 5)] public delegate void glNamedFramebufferDrawBuffer (GLuint framebuffer, GLenum buf);
    [GlVersion(4, 5)] public delegate void glNamedFramebufferDrawBuffers (GLuint framebuffer, GLsizei n, [Const] GLenum* bufs);
    [GlVersion(4, 5)] public delegate void glNamedFramebufferParameteri (GLuint framebuffer, GLenum pname, GLint param);
    [GlVersion(4, 5)] public delegate void glNamedFramebufferReadBuffer (GLuint framebuffer, GLenum mode);
    [GlVersion(4, 5)] public delegate void glNamedFramebufferRenderbuffer (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    [GlVersion(4, 5)] public delegate void glNamedFramebufferTexture (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
    [GlVersion(4, 5)] public delegate void glNamedFramebufferTextureLayer (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
    [GlVersion(4, 5)] public delegate void glNamedRenderbufferStorage (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
    [GlVersion(4, 5)] public delegate void glNamedRenderbufferStorageMultisample (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    [GlVersion(4, 5)] public delegate void glReadnPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void* data);
    [GlVersion(4, 5)] public delegate void glTextureBarrier ();
    [GlVersion(4, 5)] public delegate void glTextureBuffer (GLuint texture, GLenum internalformat, GLuint buffer);
    [GlVersion(4, 5)] public delegate void glTextureBufferRange (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizei size);
    [GlVersion(4, 5)] public delegate void glTextureParameterf (GLuint texture, GLenum pname, GLfloat param);
    [GlVersion(4, 5)] public delegate void glTextureParameterfv (GLuint texture, GLenum pname, [Const] GLfloat* @params);
    [GlVersion(4, 5)] public delegate void glTextureParameteri (GLuint texture, GLenum pname, GLint param);
    [GlVersion(4, 5)] public delegate void glTextureParameterIiv (GLuint texture, GLenum pname, [Const] GLint* @params);
    [GlVersion(4, 5)] public delegate void glTextureParameterIuiv (GLuint texture, GLenum pname, [Const] GLuint* @params);
    [GlVersion(4, 5)] public delegate void glTextureParameteriv (GLuint texture, GLenum pname, [Const] GLint* @params);
    [GlVersion(4, 5)] public delegate void glTextureStorage1D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
    [GlVersion(4, 5)] public delegate void glTextureStorage2D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    [GlVersion(4, 5)] public delegate void glTextureStorage2DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    [GlVersion(4, 5)] public delegate void glTextureStorage3D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    [GlVersion(4, 5)] public delegate void glTextureStorage3DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    [GlVersion(4, 5)] public delegate void glTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, [Const] void* pixels);
    [GlVersion(4, 5)] public delegate void glTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, [Const] void* pixels);
    [GlVersion(4, 5)] public delegate void glTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, [Const] void* pixels);
    [GlVersion(4, 5)] public delegate void glTransformFeedbackBufferBase (GLuint xfb, GLuint index, GLuint buffer);
    [GlVersion(4, 5)] public delegate void glTransformFeedbackBufferRange (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizei size);
    [GlVersion(4, 5)] public delegate void glVertexArrayAttribBinding (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
    [GlVersion(4, 5)] public delegate void glVertexArrayAttribFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    [GlVersion(4, 5)] public delegate void glVertexArrayAttribIFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    [GlVersion(4, 5)] public delegate void glVertexArrayAttribLFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    [GlVersion(4, 5)] public delegate void glVertexArrayBindingDivisor (GLuint vaobj, GLuint bindingindex, GLuint divisor);
    [GlVersion(4, 5)] public delegate void glVertexArrayElementBuffer (GLuint vaobj, GLuint buffer);
    [GlVersion(4, 5)] public delegate void glVertexArrayVertexBuffer (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    [GlVersion(4, 5)] public delegate void glVertexArrayVertexBuffers (GLuint vaobj, GLuint first, GLsizei count, [Const] GLuint* buffers, [Const] GLintptr* offsets, [Const] GLsizei* strides);

}